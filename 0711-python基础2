1.python的应用领域
	爬虫
	数据分析
	机器学习
	自动化测试
	自动化运维
2.python的开发工具
	pycharm
	eclipse
	vim
	sublime
3.python的运行环境
	cmd--python
	cmd--python 文件名
	idle
	开发工具
4.输入和输出
	输出(print())：
		a.直接输出
		b.变量输出
		c.函数输出
		d.输出格式化
	输入：
		input      python3 接受传入字符数据
		raw_input  python2 接受传入字符数据
5.运算符和表达式
	算数
		+
		-
		*
		/
		%
		//
		**
	比较
		>
		<
		==
		>=
		<=
		!=
	逻辑
		and
		or
		not
	成员
		in
		not in
6.条件判断
	1.条件判断的应用场景
		a.订单是否有收货地址
		b.登陆时候用户名、密码是否匹配
		c.年终奖发放
		d.结合运算符一起使用
	2.python中的条件判断
		1.单分支语句
			只针对一个语句进行判断(可以有多个条件)
			if   判断语句:
				执行语句
			例子:
			假如我是总统:
				打印：该起床了！
		2.双分支语句
			针对两个语句进行判断，如果第一个不满足，就一定满足第二个
			if   判断语句:
				执行语句
			else:
				执行语句
		3.多分支语句
			针对多个语句进行判断，顺序是从上到下
			if   判断语句:
				执行语句
			elif 判断语句:
				执行语句
			...
			else:
				执行语句
7.循环
	1.循环的使用场景
		a.密码输入错误3次就冻结账号
		b.不输入正确的付款码不能进行下一步
		c.爬虫页面从头解析到尾
		4.重复利用资源
	2.python中的循环
		a.循环分类
			for循环
			while循环
			跳出循环
		b.for循环
			可以便利任何序列中的项目，比如一个字符串、一个列表等等
			for 变量 in 列表、元组、字典、函数:
				执行语句
		c.while循环
			判断while后面条件是否成立，真或者假，如果为真，正常执行，如果位假，不执行
		d.跳出循环
			continue   跳出本次循环
			break      跳出整个循环
8.字符串操作
	1.字符串应用场景
		a.用户名、密码、邮箱
		b.电话号码升级
			0452-8869504
			0452-68869504
		c.爬虫网站域名
			www.baidu.com---baidu
			www.bilibi.com---bilibili
		d.分词
			hello i am your baba！
			你知不知道我知道你知道我不知道你知道
		e.密码破解
	2.字符串的索引
		name='im a str'
		索引:下标，从0开始，可以从左到右也可以从右到左
		字符串可以通过string[x]，x为下标进行字符串截取、切割
		b    a    i    d    u
		0    1    2    3    4
		-5  -4   -3   -2   -1
		string index out of range   索引超出范围
	3.字符串切片
		根据索引结合：来实现对字符串操作
		string[x,y]截取的信息为x,y-1
	4.其他操作
		字符串的拼接
		遍历
		去空格
			strip()    去除两端空格
			lstrip()   去除左边空格
			rstrip()   去除右边空格
		计算长度
			len()      计算元素个数
	5.引号
		a.单引号
		b.双引号
		c.三引号
			可以用于注释
			可以用于多行输出

9.列表
	1.序列
	序列是python中基本的数据结构
	序列追踪每个元素分配一个数字标识他们的位置，也就是索引
	python数据结构中中列表使用最多
	序列都可以进行索引、切片、拼接
	2.列表的应用场景
		a.taobao上把商品加入购物车
		b.自动化投简历屏蔽某些公司
		c.爬虫页面屏蔽某些信息
	3.列表
	python中常见数据类型，中括号中用逗号分开元素，元素可以是不同数据类型数据
	4.列表的访问
		a.直接访问
		b.遍历访问
		c.成员访问
	5.列表的索引和切片
		索引可以理解为下标，左侧从0开始，右侧从-1开始
	6.列表的拼接
	7.列表的更新(修改)
		通过索引进行修改
	8.列表的删除
10.列表补充
	1.栈的方式访问列表
		栈：		先进后出、后进先出
		队列：   先进先出、后进后出
		列表.append(数据)
		列表.pop()  				 弹出列表中最后一个元素
	2.列表的索引
		注意:只能是同类型数据进行操作，字符串和字符串，数字和数字
		注意:元素第一次出现的位置的索引
	3.列表的排序
		列表.reverse()  反向显示
		列表.sort()     排序
	4.列表推导式
		a.列表推导式
			列表解析式，简单的方法创建列表
			中括号包含一个表达式，一个语句可以有一个或者多个if语句，表达式是任意类型对象，返回结果是新的列表
		b.优点
			代码短，可读性好
			执行速度快

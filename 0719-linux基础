1.yum自动安装
配置文件中的baseurl
本地yum源
baseurl=file:///yum
网络yum源
2.安装ecshop
3.二进制文件的安装和部署
mongodb
jdk
tomcat
---------------------------------------------------------
tenorder项目安装和部署
开发环境
	1.开发语言: 		java
	2.web服务器:		tomcat 7
	3.数据库服务器:  mysql
安装部署
	1.安装操作系统
	2.设置IP地址
	3.设置主机名
	4.绑定主机名
	5.关闭防火墙
	6.关闭selinux
	7.安装mysql相关软件
		a.配置好yum
		b.通过yum安装好mysql服务器
		c.启动mysql服务器后设置管理员密码
		d.检查mysql端口和服务
	8.安装配置jdk
		a.下载
		b.解压
		c.设置环境变量
		d.使环境变量生效
	9.安装部署tomcat
		a.下载
		b.解压
		c.进入到tomcat的bin目录执行startup.sh
		d.检查tomcat
	10.删除tomcat中webapps目录下所有文件
		rm -rf /root/apache-tomcat-7.0.77/webapps/*
	11.把tenorder项目在win下解压，传入linux中tomcat的webapps目录下
	12.导入数据库
		a.进入到tenorder.sql所在目录
			cd /root/apache-tomcat-7.0.77/webapps/tenorder/
		b.登陆mysql数据库
			mysql -u root -p
			管理员登陆mysql本地数据库
		c.创建数据库
			create database ten;
		d.切换数据库为ten
			use ten;
		e.导入tenorder.sql文件
			source tenorder.sql;
		f.退出mysql
			exit
	13.修改tenorder的配置信息(安装文档)
		vim /root/apache-tomcat-7.0.77/webapps/tenorder/WEB-INF/classes/database.properties
	14.重启tomcat服务器
		进入到tomcat的bin目录
		cd /root/apache-tomcat-7.0.77/bin/
		执行shutdown.sh
		./shutdown.sh
		执行startup.sh
		./startup.sh
	15.访问tenorder项目
		前台:linuxip:8080/tenorder
		后台:linuxip:8080/tenorder/admin
			用户名  admin
			密码    admin

-------------------------------------------------------------------------------------------
awk
文本行的处理工具
awk options 文件名
-F  按照什么分隔
""  代表分隔符
$1  分隔后第一列的内容
$2  分隔后第二列的内容
$0  代表一整行
$NF 代表最后一列
NF  代表每行有多少列
NR  代表当前行号
ifconfig  |grep inet |grep -v inet6 |head -1 |awk -F " " '{ print $2}' |awk -F ":" '{print $2}' 查看IP地址

cat /etc/passwd |awk -F ":" '{ print $1 }'

awk -F ":" '{ print $1 }' /etc/passwd     打印文件第一列

awk -F ":" '{ print $1,$6 }' /etc/passwd  打印文件第一列和第六列

awk -F ":" '{ print $1":"$6 }' /etc/passwd 打印文件第一列和第六列中间用：

awk -F ":" '{ print $0}' /etc/passwd      打印行中所有内容

awk -F ":" '{ print $NF }' /etc/passwd   打印行中最后一列

awk -F ":" '{ print NF }' /etc/passwd   打印行中有多少列

awk -F ":" '{ print NR,$1 }' /etc/passwd 打印行号和第一列内容


awk的操作符
==  	等于
!=		不等于
>= 		大于等于
<=		小于等于
> 		大于
< 		小于
awk的逻辑操作符
&&      逻辑与
||      逻辑或
!       逻辑非
awk -F ":" 'NR==8 {print $0}' /etc/passwd   打印文件第8行

awk -F ":" 'NF<4 {print $0}' passwd         打印字段小于4的内容

awk -F ":" 'NR>=5&&NR<=10 {print $0}' passwd 打印第5行到第10行内容

awk -F ":" '$3>=30&&$3<=100 {print $0}' passwd 打印第三列大于等于30并且小于等100的行的数据

awk -F "分隔符" 'BEGIN{处理文件前执行的代码}{处理过程中执行的代码}END{处理文件后执行的代码}'
输出顶部增加 heygor do this
输出底部增加 good job

awk -F ":" 'BEGIN{print "heygor do this"}{print $0}END{print "good job!"}' passwd

打印字段数量大于4的总行数量
补充:wc -l 统计、计算
awk -F ":" 'NF>4 {print $0}' /etc/passwd |wc -l
awk -F ":" 'BEGIN{ count=0 }NF>4{ count++ }END{ print count }' /etc/passwd

把awk代码写入到文件中
awk1代码:
BEGIN{
        FS=":"
        count=0
}
{
        if ( NF>4 ){
                count++
        }
}
END{
        print count
}
awk命令调用文件方式
awk -f awk1 /etc/passwd








